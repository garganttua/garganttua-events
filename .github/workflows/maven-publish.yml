name: Maven Package

on:
  push:
    branches: 
      - "**"  # Build on any branch push
    tags:
      - "*"  # Trigger on any tag creation

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        server-id: github-garganttua-events
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Generate Maven Settings
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        output_file: package-settings.xml
        servers: >
          [
            {
              "id": "github garganttua tooling",
              "username": "${{ github.actor }}",
              "password": "${{ github.token }}"
            }
          ]

    - name: Build with Maven
      run: mvn -B package --file pom.xml -s $GITHUB_WORKSPACE/package-settings.xml
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 18
      uses: actions/setup-java@v4
      with:
        java-version: '18'
        distribution: 'temurin'
        server-id: github garganttua events
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Generate Maven Settings
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        output_file: custom-settings.xml
        servers: |
          [
            {
              "id": "github garganttua tooling",
              "username": "${{ github.actor }}",
              "password": "${{ github.token }}"
            },
             {
              "id": "github garganttua events",
              "username": "${{ github.actor }}",
              "password": "${{ github.token }}"
            }
          ]

    - name: Deploy to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/custom-settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
